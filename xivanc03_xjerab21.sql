/* File: xivanc03_xjerab21.sql *
 * Project: IDS, part 2        *
 * Authors: Martin Ivanco,     *
 *          Vladimir Jerabek   */

-- -- -- drop residual tables -- -- --
DROP TABLE fleet CASCADE CONSTRAINT;
DROP TABLE boat CASCADE CONSTRAINT;
DROP TABLE port CASCADE CONSTRAINT;
DROP TABLE battle CASCADE CONSTRAINT;
DROP TABLE boat_participated_in_battle CASCADE CONSTRAINT;
DROP TABLE crew_participated_in_battle CASCADE CONSTRAINT;
DROP TABLE alce_participated_in_battle CASCADE CONSTRAINT;
DROP TABLE alliance CASCADE CONSTRAINT;
DROP TABLE crew_part_of_alliance CASCADE CONSTRAINT;
DROP TABLE crew CASCADE CONSTRAINT;
DROP TABLE pirate_in_crew CASCADE CONSTRAINT;
DROP TABLE pirate CASCADE CONSTRAINT;
DROP TABLE common_pirate CASCADE CONSTRAINT;
DROP TABLE captain CASCADE CONSTRAINT;

-- -- -- creating tables -- -- --
CREATE TABLE fleet (
	id_fleet integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar2(30),
	id_captain integer NOT NULL
);

CREATE TABLE boat (
	id_boat integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	type varchar2(30) NOT NULL,
	capacity integer NOT NULL,
	id_port integer,
	id_fleet integer,
	id_crew integer NOT NULL,
	id_captain integer NOT NULL
);

CREATE TABLE port (
	id_port integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	capacity integer NOT NULL,
	place varchar2(30) NOT NULL
);

CREATE TABLE battle (
	id_battle integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	losses integer NOT NULL,
	date_happened date NOT NULL,
	id_port integer
);

CREATE TABLE boat_participated_in_battle (
	id_boat integer NOT NULL,
	id_battle integer NOT NULL
);

CREATE TABLE crew_participated_in_battle (
	id_crew integer NOT NULL,
	id_battle integer NOT NULL
);

CREATE TABLE alce_participated_in_battle (
	id_alliance integer NOT NULL,
	id_battle integer NOT NULL
);

CREATE TABLE alliance (
	id_alliance integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar2(30) NOT NULL,
	id_port integer NOT NULL
);

CREATE TABLE crew_part_of_alliance (
	id_crew integer NOT NULL,
	id_alliance integer NOT NULL
);

CREATE TABLE crew (
	id_crew integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar2(30) NOT NULL,
	jolly_roger varchar2(30) NOT NULL,
	id_captain integer NOT NULL,
	id_port integer NOT NULL
);

CREATE TABLE pirate_in_crew (
	id_pirate integer NOT NULL,
	id_crew integer NOT NULL
);

CREATE TABLE pirate (
	id_pirate integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar2(30) NOT NULL,
	nick varchar2(30) NOT NULL,
	date_of_birth date NOT NULL,
	beard_color varchar2(30) NOT NULL,
	date_joined_crew date,
	id_boat integer,
	characteristics_list varchar2(255)
);

CREATE TABLE common_pirate (
	id_pirate integer PRIMARY KEY, 
	position varchar2(255) NOT NULL
);

CREATE TABLE captain (
	id_pirate integer PRIMARY KEY, 
	degree varchar2(255) NOT NULL
);

-- -- -- setting composite primary keys -- -- --
ALTER TABLE boat_participated_in_battle ADD CONSTRAINT pk_boat_participated_in_battle PRIMARY KEY (id_boat, id_battle);
ALTER TABLE crew_participated_in_battle ADD CONSTRAINT pk_crew_participated_in_battle PRIMARY KEY (id_crew, id_battle);
ALTER TABLE alce_participated_in_battle ADD CONSTRAINT pk_alce_participated_in_battle PRIMARY KEY (id_alliance, id_battle);
ALTER TABLE crew_part_of_alliance ADD CONSTRAINT pk_crew_part_of_alliance PRIMARY KEY (id_crew, id_alliance);
ALTER TABLE pirate_in_crew ADD CONSTRAINT pk_pirate_in_crew PRIMARY KEY (id_pirate, id_crew);

-- -- -- setting foreign keys -- -- --
ALTER TABLE fleet ADD CONSTRAINT fk_captain1 FOREIGN KEY (id_captain) REFERENCES captain(id_pirate);

ALTER TABLE boat ADD CONSTRAINT fk_port1 FOREIGN KEY (id_port) REFERENCES port(id_port);
ALTER TABLE boat ADD CONSTRAINT fk_fleet FOREIGN KEY (id_fleet) REFERENCES fleet(id_fleet);
ALTER TABLE boat ADD CONSTRAINT fk_crew1 FOREIGN KEY (id_crew) REFERENCES crew(id_crew);
ALTER TABLE boat ADD CONSTRAINT fk_captain2 FOREIGN KEY (id_captain) REFERENCES captain(id_pirate);

ALTER TABLE battle ADD CONSTRAINT fk_port2 FOREIGN KEY (id_port) REFERENCES port(id_port);

ALTER TABLE boat_participated_in_battle ADD CONSTRAINT fk_boat1 FOREIGN KEY (id_boat) REFERENCES boat(id_boat);
ALTER TABLE boat_participated_in_battle ADD CONSTRAINT fk_battle1 FOREIGN KEY (id_battle) REFERENCES battle(id_battle);

ALTER TABLE crew_participated_in_battle ADD CONSTRAINT fk_crew2 FOREIGN KEY (id_crew) REFERENCES crew(id_crew);
ALTER TABLE crew_participated_in_battle ADD CONSTRAINT fk_battle2 FOREIGN KEY (id_battle) REFERENCES battle(id_battle);

ALTER TABLE alce_participated_in_battle ADD CONSTRAINT fk_alliance1 FOREIGN KEY (id_alliance) REFERENCES alliance(id_alliance);
ALTER TABLE alce_participated_in_battle ADD CONSTRAINT fk_battle3 FOREIGN KEY (id_battle) REFERENCES battle(id_battle);

ALTER TABLE alliance ADD CONSTRAINT fk_port3 FOREIGN KEY (id_port) REFERENCES port(id_port);

ALTER TABLE crew_part_of_alliance ADD CONSTRAINT fk_crew3 FOREIGN KEY (id_crew) REFERENCES crew(id_crew);
ALTER TABLE crew_part_of_alliance ADD CONSTRAINT fk_alliance2 FOREIGN KEY (id_alliance) REFERENCES alliance(id_alliance);

ALTER TABLE crew ADD CONSTRAINT fk_captain3 FOREIGN KEY (id_captain) REFERENCES captain(id_pirate);
ALTER TABLE crew ADD CONSTRAINT fk_port4 FOREIGN KEY (id_port) REFERENCES port(id_port);

ALTER TABLE pirate_in_crew ADD CONSTRAINT fk_pirate1 FOREIGN KEY (id_pirate) REFERENCES pirate(id_pirate);
ALTER TABLE pirate_in_crew ADD CONSTRAINT fk_crew4 FOREIGN KEY (id_crew) REFERENCES crew(id_crew);

ALTER TABLE pirate ADD CONSTRAINT fk_boat2 FOREIGN KEY (id_boat) REFERENCES boat(id_boat);

ALTER TABLE common_pirate ADD CONSTRAINT fk_pirate2 FOREIGN KEY (id_pirate) REFERENCES pirate(id_pirate);

ALTER TABLE captain ADD CONSTRAINT fk_pirate3 FOREIGN KEY (id_pirate) REFERENCES pirate(id_pirate);

-- -- -- inserting sample data -- -- --
INSERT INTO pirate VALUES('1','Jack Morris','Wooden Leg',TO_DATE('09-NOV-1534','DD-MON-YYYY'),'black',TO_DATE('11-FEB-1572','DD-MON-YYYY'),NULL,'very mean');
INSERT INTO captain VALUES('1','main');
INSERT INTO port VALUES('1101','15','South Shore');
INSERT INTO crew VALUES('1001','Nut Crushers','nutcrushers.jpg','1','1101');
INSERT INTO pirate_in_crew VALUES('1','1001');
INSERT INTO fleet VALUES('1401','North Wind','1');
INSERT INTO boat VALUES('1201','caravela','34','1101','1401','1001','1');
UPDATE pirate SET id_boat = '1201' WHERE id_pirate = '1';
INSERT INTO pirate VALUES('2','Norbert Ford','Floor',TO_DATE('09-NOV-1554','DD-MON-YYYY'),'brown',TO_DATE('11-FEB-1572','DD-MON-YYYY'),'1201','weak');
INSERT INTO common_pirate VALUES('2','human rag');
INSERT INTO pirate_in_crew VALUES('2','1001');
INSERT INTO alliance VALUES('1301','Guild of Skull','1101');
INSERT INTO crew_part_of_alliance VALUES('1001','1301');
INSERT INTO battle VALUES('1501','1',TO_DATE('12-FEB-1572','DD-MON-YYYY'),'1101');
INSERT INTO boat_participated_in_battle VALUES('1201','1501');
INSERT INTO crew_participated_in_battle VALUES('1001','1501');
INSERT INTO alce_participated_in_battle VALUES('1301','1501');

-- -- -- triggers -- -- -- 

-- beard color trigger --
DROP TABLE unknown_color_log;
CREATE TABLE unknown_color_log (
	id_pirate integer,
	color varchar2(30),
	date_when date
);
CREATE OR REPLACE TRIGGER trigger_unknown_color
	AFTER INSERT ON pirate
	FOR EACH ROW
	WHEN (NEW.beard_color <> 'black' AND NEW.beard_color <> 'brown' AND NEW.beard_color <> 'red' AND NEW.beard_color <> 'white')
	DECLARE unknown_color EXCEPTION;
BEGIN
	IF USER() <> 'AUTHORIZED' THEN
		RAISE unknown_color;
	END IF;

	EXCEPTION
	WHEN unknown_color THEN 
	INSERT INTO unknown_color_log VALUES(:NEW.id_pirate, :NEW.beard_color, SYSDATE);
END;
/
-- demonstration --
SHOW ERRORS;
SELECT * FROM pirate;
SELECT * FROM unknown_color_log;
INSERT INTO pirate VALUES('3','Johnny Green','Spinach',TO_DATE('07-NOV-1542','DD-MON-YYYY'),'green',TO_DATE('11-FEB-1572','DD-MON-YYYY'),NULL,'unreal');
SELECT * FROM pirate;
SELECT * FROM unknown_color_log;

-- generate id trigger --
DROP SEQUENCE seq_pirate_id;
CREATE SEQUENCE seq_pirate_id
MINVALUE 1
MAXVALUE 1000
START WITH 5
INCREMENT BY 1
CACHE 10;
CREATE OR REPLACE TRIGGER trigger_pirate_id
	BEFORE INSERT ON pirate
	FOR EACH ROW
	WHEN (NEW.id_pirate IS NULL)
	DECLARE null_pirate_id EXCEPTION;
BEGIN
	IF USER() <> 'AUTHORIZED' THEN
		RAISE null_pirate_id;
	END IF;

	EXCEPTION WHEN null_pirate_id THEN
	:NEW.id_pirate := seq_pirate_id.nextval;
END;
/
-- demonstration --
SELECT * FROM pirate;
INSERT INTO pirate VALUES(NULL,'Morpheus Sly','Eagle',TO_DATE('21-NOV-1547','DD-MON-YYYY'),'brown',TO_DATE('11-FEB-1572','DD-MON-YYYY'),NULL,'eagle-eyed');
SELECT * FROM pirate;

-- -- -- procedures -- -- --

-- transfer the ownership of a fleet --
CREATE OR REPLACE PROCEDURE capture_a_fleet (crew_id IN integer, captain_id IN integer, fleet_id IN integer) AS
BEGIN
	DECLARE
		CURSOR boat_cur IS
			SELECT id_boat, id_fleet FROM boat;

		c_boat boat_cur%ROWTYPE;

	BEGIN
		UPDATE fleet SET id_captain = captain_id WHERE id_fleet = fleet_id;

		OPEN boat_cur;
		LOOP 
			FETCH boat_cur INTO c_boat; 
			EXIT WHEN boat_cur%NOTFOUND; 

			IF (c_boat.id_fleet = fleet_id) THEN
				UPDATE boat SET id_crew = crew_id WHERE boat.id_boat = c_boat.id_boat;
				UPDATE boat SET id_captain = captain_id WHERE boat.id_boat = c_boat.id_boat;
			END IF;
		END LOOP;
		CLOSE boat_cur;
	END;
END;
/
-- demonstration --
INSERT INTO pirate VALUES('4','Henry Horrible','Thorn',TO_DATE('09-NOV-1534','DD-MON-YYYY'),'black',TO_DATE('13-JAN-1572','DD-MON-YYYY'),NULL,'cruel');
INSERT INTO captain VALUES('4','main');
INSERT INTO port VALUES('1102','10','East Coast');
INSERT INTO crew VALUES('1002','Pirate Storm','piratestorm.jpg','4','1102');
INSERT INTO fleet VALUES('1402','Black Plague','4');
INSERT INTO boat VALUES('1202','sail boat','25','1102','1402','1002','4');
UPDATE pirate SET id_boat = '1202' WHERE id_pirate = '4';

SELECT id_fleet, id_captain FROM fleet;
SELECT id_boat, id_fleet, id_crew, id_captain FROM boat;
EXECUTE capture_a_fleet ('1001','1','1402');
SELECT id_fleet, id_captain FROM fleet;
SELECT id_boat, id_fleet, id_crew, id_captain FROM boat;

-- rename crew --
CREATE OR REPLACE PROCEDURE rename_crew (crew_id IN integer, new_name IN varchar2(30)) AS
BEGIN
	DECLARE
		invalid_crew EXCEPTION;

	BEGIN
		UPDATE crew SET crew.name = new_name WHERE crew.id_crew = crew_id;

		IF SQL%NOTFOUND THEN
			RAISE invalid_crew;
		END IF;

		EXCEPTION
		WHEN invalid_crew THEN
		DBMS_OUTPUT.put_line ('No crew with such id.');
	END;
END;
/



---------------------------------
-- EXPLAIN PLAN & use of INDEX --
---------------------------------
DROP INDEX index_Explain;

EXPLAIN PLAN FOR
SELECT boat.type, AVG(port.capacity)
FROM (boat INNER JOIN port ON boat.id_port = port.id_port)
GROUP BY boat.type;

SELECT * FROM TABLE(dbms_xplan.display('plan_table', null, 'typical'));


CREATE INDEX index_Explain ON boat (type);

EXPLAIN PLAN FOR
SELECT /*+ INDEX(boat index_Explain)*/ boat.type, AVG(port.capacity)
FROM (boat INNER JOIN port ON boat.id_port = port.id_port)
GROUP BY boat.type;

SELECT * FROM TABLE(dbms_xplan.display('plan_table', null, 'typical'));



-- demonstration --
SELECT id_crew, name FROM crew;
EXECUTE rename_crew ('1003', 'Ocean Emperors');
SELECT id_crew, name FROM crew;
EXECUTE rename_crew ('1001', 'Ocean Emperors');
SELECT id_crew, name FROM crew;

-- -- -- user acces definition -- -- --
CREATE USER xjerab21 IDENTIFIED BY xjerab21;

CREATE ROLE xjerab21role;
GRANT CONNECT, RESOURCE, CREATE SESSION TO xjerab21role;
GRANT CREATE MATERIALIZED VIEW, DROP MATERIALIZED VIEW, CREATE TABLE TO xjerab21role;
GRANT xjerab21role TO xjerab21;

-- -- -- user view definition -- -- --
-- shows boats currently in South Shore port
DROP MATERIALIZED VIEW xjerab21.SouthPort;
CREATE MATERIALIZED VIEW xjerab21.SouthPort FOR UPDATE AS
	SELECT boat.id_boat AS BoatID
	FROM boat
	WHERE boat.id_port = '1101';
-- demonstration
SELECT * FROM xjerab21.SouthPort;
INSERT INTO xjerab21.SouthPort VALUES ('1203');
SELECT * FROM xjerab21.SouthPort;
